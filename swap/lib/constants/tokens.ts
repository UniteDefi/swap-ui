import { Token, Chain } from "@/components/features/swap/token_input";
import deployments from "./deployments.json";

export const CHAINS: Record<number | string, Chain> = {
  // EVM Chains
  11155111: { id: 11155111, name: "Ethereum Sepolia", shortName: "ETH", logo: "/logos/ethereum.png" },
  84532: { id: 84532, name: "Base Sepolia", shortName: "BASE", logo: "/logos/base.png" },
  421614: { id: 421614, name: "Arbitrum Sepolia", shortName: "ARB", logo: "/logos/arbitrum.png" },
  11155420: { id: 11155420, name: "Optimism Sepolia", shortName: "OP", logo: "/logos/optimism.png" },
  80002: { id: 80002, name: "Polygon Amoy", shortName: "MATIC", logo: "/logos/polygon.png" },
  534351: { id: 534351, name: "Scroll Sepolia", shortName: "SCROLL", logo: "/logos/scroll.png" },
  44787: { id: 44787, name: "Celo Alfajores", shortName: "CELO", logo: "/logos/celo.png" },
  1301: { id: 1301, name: "Unichain Sepolia", shortName: "UNI", logo: "/logos/unichain.png" },
  545: { id: 545, name: "Flow Testnet", shortName: "FLOW", logo: "/logos/flow.png" },
  713715: { id: 713715, name: "Sei Testnet", shortName: "SEI", logo: "/logos/sei.png" },
  97: { id: 97, name: "BNB Testnet", shortName: "BNB", logo: "/logos/bnb.png" },
  1313161555: { id: 1313161555, name: "Aurora Testnet", shortName: "AURORA", logo: "/logos/aurora.png" },
  11111: { id: 11111, name: "Injective Testnet", shortName: "INJ", logo: "/logos/injective.png" },
  128123: { id: 128123, name: "Etherlink Testnet", shortName: "XTZ", logo: "/logos/etherlink.png" },
  41454: { id: 41454, name: "Monad Testnet", shortName: "MON", logo: "/logos/monad.png" },
  // Non-EVM Chains
  "aptos-testnet": { id: "aptos-testnet", name: "Aptos Testnet", shortName: "APT", logo: "/logos/aptos.png" },
  "sui-testnet": { id: "sui-testnet", name: "Sui Testnet", shortName: "SUI", logo: "/logos/sui.png" },
  "cardano-testnet": { id: "cardano-testnet", name: "Cardano Testnet", shortName: "ADA", logo: "/logos/cardano.png" },
  "stellar-testnet": { id: "stellar-testnet", name: "Stellar Testnet", shortName: "XLM", logo: "/logos/stellar.png" },
  "osmosis-testnet": { id: "osmosis-testnet", name: "Osmosis Testnet", shortName: "OSMO", logo: "/logos/osmosis.png" },
  "secret-testnet": { id: "secret-testnet", name: "Secret Network Testnet", shortName: "SCRT", logo: "/logos/secret.png" },
  "xrpl-testnet": { id: "xrpl-testnet", name: "XRPL Testnet", shortName: "XRP", logo: "/logos/xrpl.png" },
  "ton-testnet": { id: "ton-testnet", name: "TON Testnet", shortName: "TON", logo: "/logos/ton.png" },
  "near-testnet": { id: "near-testnet", name: "NEAR Testnet", shortName: "NEAR", logo: "/logos/near.png" },
  "polkadot-testnet": { id: "polkadot-testnet", name: "Polkadot Testnet", shortName: "DOT", logo: "/logos/polkadot.png" },
  "starknet-testnet": { id: "starknet-testnet", name: "Starknet Testnet", shortName: "STRK", logo: "/logos/starknet.png" },
};

// Helper function to get token addresses from deployments
function getTokenAddress(chainId: string | number, tokenType: "usdt" | "dai" | "wrapped"): string {
  const deployment = deployments[chainId as keyof typeof deployments];
  if (!deployment) return "";
  
  switch (tokenType) {
    case "usdt":
      return deployment.mockUsdtAddress || "";
    case "dai":
      return deployment.mockDaiAddress || "";
    case "wrapped":
      return deployment.mockWrappedNativeAddress || "";
    default:
      return "";
  }
}

export const POPULAR_TOKENS: Token[] = [
  // Ethereum Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(11155111, "wrapped") || "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 11155111,
    chain: CHAINS[11155111],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(11155111, "usdt") || "0xaA8E23Fb1079EA71e0a56F48a2aA51851D8433D0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 11155111,
    chain: CHAINS[11155111],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(11155111, "dai") || "0x68194a729C2450ad26072b3D33ADaCbcef39D574",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 11155111,
    chain: CHAINS[11155111],
  },

  // Base Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(84532, "wrapped") || "0x4200000000000000000000000000000000000006",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 84532,
    chain: CHAINS[84532],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(84532, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 84532,
    chain: CHAINS[84532],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(84532, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 84532,
    chain: CHAINS[84532],
  },

  // Arbitrum Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(421614, "wrapped") || "0x980B62Da83eFf3D4576C647993b0c1D7faf17c73",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 421614,
    chain: CHAINS[421614],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(421614, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 421614,
    chain: CHAINS[421614],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(421614, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 421614,
    chain: CHAINS[421614],
  },

  // Optimism Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(11155420, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 11155420,
    chain: CHAINS[11155420],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(11155420, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 11155420,
    chain: CHAINS[11155420],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(11155420, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 11155420,
    chain: CHAINS[11155420],
  },

  // Polygon Amoy
  {
    symbol: "WMATIC",
    name: "Wrapped Matic",
    address: getTokenAddress(80002, "wrapped") || "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
    decimals: 18,
    coingeckoId: "wmatic",
    logoURI: "/logos/polygon.png",
    chainId: 80002,
    chain: CHAINS[80002],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(80002, "usdt") || "0x3813e82e6f7098b9583FC0F33a962D02018B6803",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 80002,
    chain: CHAINS[80002],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(80002, "dai") || "0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 80002,
    chain: CHAINS[80002],
  },

  // Scroll Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(534351, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 534351,
    chain: CHAINS[534351],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(534351, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 534351,
    chain: CHAINS[534351],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(534351, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 534351,
    chain: CHAINS[534351],
  },

  // Celo Alfajores
  {
    symbol: "WCELO",
    name: "Wrapped CELO",
    address: getTokenAddress(44787, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "celo",
    logoURI: "/logos/celo.png",
    chainId: 44787,
    chain: CHAINS[44787],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(44787, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 44787,
    chain: CHAINS[44787],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(44787, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 44787,
    chain: CHAINS[44787],
  },

  // Unichain Sepolia
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(1301, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 1301,
    chain: CHAINS[1301],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(1301, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 1301,
    chain: CHAINS[1301],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(1301, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 1301,
    chain: CHAINS[1301],
  },

  // Flow Testnet
  {
    symbol: "WFLOW",
    name: "Wrapped FLOW",
    address: getTokenAddress(545, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "flow",
    logoURI: "/logos/flow.png",
    chainId: 545,
    chain: CHAINS[545],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(545, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 545,
    chain: CHAINS[545],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(545, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 545,
    chain: CHAINS[545],
  },

  // Sei Testnet
  {
    symbol: "WSEI",
    name: "Wrapped SEI",
    address: getTokenAddress(713715, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "sei-network",
    logoURI: "/logos/sei.png",
    chainId: 713715,
    chain: CHAINS[713715],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(713715, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 713715,
    chain: CHAINS[713715],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(713715, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 713715,
    chain: CHAINS[713715],
  },

  // BNB Testnet
  {
    symbol: "WBNB",
    name: "Wrapped BNB",
    address: getTokenAddress(97, "wrapped") || "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd",
    decimals: 18,
    coingeckoId: "wbnb",
    logoURI: "/logos/bnb.png",
    chainId: 97,
    chain: CHAINS[97],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(97, "usdt") || "0x337610d27c682E347C9cD60BD4b3b107C9d34dDd",
    decimals: 18,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 97,
    chain: CHAINS[97],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(97, "dai") || "0xEC5dCb5Dbf4B114C9d0F65BcCAb49EC54F6A0867",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 97,
    chain: CHAINS[97],
  },

  // Aurora Testnet
  {
    symbol: "WETH",
    name: "Wrapped Ether",
    address: getTokenAddress(1313161555, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: 1313161555,
    chain: CHAINS[1313161555],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(1313161555, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 1313161555,
    chain: CHAINS[1313161555],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(1313161555, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 1313161555,
    chain: CHAINS[1313161555],
  },

  // Injective Testnet
  {
    symbol: "WINJ",
    name: "Wrapped INJ",
    address: getTokenAddress(11111, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "injective-protocol",
    logoURI: "/logos/injective.png",
    chainId: 11111,
    chain: CHAINS[11111],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(11111, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 11111,
    chain: CHAINS[11111],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(11111, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 11111,
    chain: CHAINS[11111],
  },

  // Etherlink Testnet
  {
    symbol: "WXTZ",
    name: "Wrapped XTZ",
    address: getTokenAddress(128123, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "tezos",
    logoURI: "/logos/etherlink.png",
    chainId: 128123,
    chain: CHAINS[128123],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(128123, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 128123,
    chain: CHAINS[128123],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(128123, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 128123,
    chain: CHAINS[128123],
  },

  // Monad Testnet
  {
    symbol: "WMON",
    name: "Wrapped MON",
    address: getTokenAddress(41454, "wrapped") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "monad",
    logoURI: "/logos/monad.png",
    chainId: 41454,
    chain: CHAINS[41454],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress(41454, "usdt") || "0x0000000000000000000000000000000000000000",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: 41454,
    chain: CHAINS[41454],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress(41454, "dai") || "0x0000000000000000000000000000000000000000",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: 41454,
    chain: CHAINS[41454],
  },

  // Non-EVM Chains
  // Aptos Testnet
  {
    symbol: "WAPT",
    name: "Wrapped APT",
    address: getTokenAddress("aptos-testnet", "wrapped") || "0x0",
    decimals: 8,
    coingeckoId: "aptos",
    logoURI: "/logos/aptos.png",
    chainId: "aptos-testnet",
    chain: CHAINS["aptos-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("aptos-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "aptos-testnet",
    chain: CHAINS["aptos-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("aptos-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "aptos-testnet",
    chain: CHAINS["aptos-testnet"],
  },

  // Sui Testnet
  {
    symbol: "WSUI",
    name: "Wrapped SUI",
    address: getTokenAddress("sui-testnet", "wrapped") || "0x0",
    decimals: 9,
    coingeckoId: "sui",
    logoURI: "/logos/sui.png",
    chainId: "sui-testnet",
    chain: CHAINS["sui-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("sui-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "sui-testnet",
    chain: CHAINS["sui-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("sui-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "sui-testnet",
    chain: CHAINS["sui-testnet"],
  },

  // Cardano Testnet
  {
    symbol: "WADA",
    name: "Wrapped ADA",
    address: getTokenAddress("cardano-testnet", "wrapped") || "0x0",
    decimals: 6,
    coingeckoId: "cardano",
    logoURI: "/logos/cardano.png",
    chainId: "cardano-testnet",
    chain: CHAINS["cardano-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("cardano-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "cardano-testnet",
    chain: CHAINS["cardano-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("cardano-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "cardano-testnet",
    chain: CHAINS["cardano-testnet"],
  },

  // Stellar Testnet
  {
    symbol: "WXLM",
    name: "Wrapped XLM",
    address: getTokenAddress("stellar-testnet", "wrapped") || "0x0",
    decimals: 7,
    coingeckoId: "stellar",
    logoURI: "/logos/stellar.png",
    chainId: "stellar-testnet",
    chain: CHAINS["stellar-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("stellar-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "stellar-testnet",
    chain: CHAINS["stellar-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("stellar-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "stellar-testnet",
    chain: CHAINS["stellar-testnet"],
  },

  // Osmosis Testnet
  {
    symbol: "WOSMO",
    name: "Wrapped OSMO",
    address: getTokenAddress("osmosis-testnet", "wrapped") || "0x0",
    decimals: 6,
    coingeckoId: "osmosis",
    logoURI: "/logos/osmosis.png",
    chainId: "osmosis-testnet",
    chain: CHAINS["osmosis-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("osmosis-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "osmosis-testnet",
    chain: CHAINS["osmosis-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("osmosis-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "osmosis-testnet",
    chain: CHAINS["osmosis-testnet"],
  },

  // Secret Network Testnet
  {
    symbol: "WSCRT",
    name: "Wrapped SCRT",
    address: getTokenAddress("secret-testnet", "wrapped") || "0x0",
    decimals: 6,
    coingeckoId: "secret",
    logoURI: "/logos/secret.png",
    chainId: "secret-testnet",
    chain: CHAINS["secret-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("secret-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "secret-testnet",
    chain: CHAINS["secret-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("secret-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "secret-testnet",
    chain: CHAINS["secret-testnet"],
  },

  // XRPL Testnet
  {
    symbol: "WXRP",
    name: "Wrapped XRP",
    address: getTokenAddress("xrpl-testnet", "wrapped") || "0x0",
    decimals: 6,
    coingeckoId: "ripple",
    logoURI: "/logos/xrpl.png",
    chainId: "xrpl-testnet",
    chain: CHAINS["xrpl-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("xrpl-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "xrpl-testnet",
    chain: CHAINS["xrpl-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("xrpl-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "xrpl-testnet",
    chain: CHAINS["xrpl-testnet"],
  },

  // TON Testnet
  {
    symbol: "WTON",
    name: "Wrapped TON",
    address: getTokenAddress("ton-testnet", "wrapped") || "0x0",
    decimals: 9,
    coingeckoId: "the-open-network",
    logoURI: "/logos/ton.png",
    chainId: "ton-testnet",
    chain: CHAINS["ton-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("ton-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "ton-testnet",
    chain: CHAINS["ton-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("ton-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "ton-testnet",
    chain: CHAINS["ton-testnet"],
  },

  // NEAR Testnet
  {
    symbol: "WNEAR",
    name: "Wrapped NEAR",
    address: getTokenAddress("near-testnet", "wrapped") || "0x0",
    decimals: 24,
    coingeckoId: "near",
    logoURI: "/logos/near.png",
    chainId: "near-testnet",
    chain: CHAINS["near-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("near-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "near-testnet",
    chain: CHAINS["near-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("near-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "near-testnet",
    chain: CHAINS["near-testnet"],
  },

  // Polkadot Testnet
  {
    symbol: "WDOT",
    name: "Wrapped DOT",
    address: getTokenAddress("polkadot-testnet", "wrapped") || "0x0",
    decimals: 12,
    coingeckoId: "polkadot",
    logoURI: "/logos/polkadot.png",
    chainId: "polkadot-testnet",
    chain: CHAINS["polkadot-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("polkadot-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "polkadot-testnet",
    chain: CHAINS["polkadot-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("polkadot-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "polkadot-testnet",
    chain: CHAINS["polkadot-testnet"],
  },

  // Starknet Testnet
  {
    symbol: "WETH",
    name: "Wrapped ETH",
    address: getTokenAddress("starknet-testnet", "wrapped") || "0x0",
    decimals: 18,
    coingeckoId: "weth",
    logoURI: "/logos/ethereum.png",
    chainId: "starknet-testnet",
    chain: CHAINS["starknet-testnet"],
  },
  {
    symbol: "USDT",
    name: "Tether USD",
    address: getTokenAddress("starknet-testnet", "usdt") || "0x0",
    decimals: 6,
    coingeckoId: "tether",
    logoURI: "/logos/usdt.png",
    chainId: "starknet-testnet",
    chain: CHAINS["starknet-testnet"],
  },
  {
    symbol: "DAI",
    name: "Dai Stablecoin",
    address: getTokenAddress("starknet-testnet", "dai") || "0x0",
    decimals: 18,
    coingeckoId: "dai",
    logoURI: "/logos/dai.png",
    chainId: "starknet-testnet",
    chain: CHAINS["starknet-testnet"],
  },
];

export const TOKENS_BY_SYMBOL: Record<string, Token[]> = POPULAR_TOKENS.reduce((acc, token) => {
  if (!acc[token.symbol]) {
    acc[token.symbol] = [];
  }
  acc[token.symbol].push(token);
  return acc;
}, {} as Record<string, Token[]>);